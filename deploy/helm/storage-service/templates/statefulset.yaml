apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "storage-service.fullname" . }}
  labels:
    {{- include "storage-service.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "storage-service.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "storage-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "storage-service.selectorLabels" . | nindent 8 }}
        {{- include "storage-service.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ if .Values.serviceAccount.create }}{{ include "storage-service.fullname" . }}{{ else }}{{ default (include "storage-service.fullname" .) .Values.serviceAccount.name }}{{ end }}
      containers:
        - name: storage
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: grpc
          env:
            {{- range $name, $value := .Values.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ default "/var/lib/tritontube" .Values.env.STORAGE_DATA_PATH | quote }}
          livenessProbe:
            tcpSocket:
              port: grpc
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: grpc
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
